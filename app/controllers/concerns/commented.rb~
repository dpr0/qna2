require 'active_support/concern'

module Commented
  extend ActiveSupport::Concern

  included do
    before_action :load_comment, only: [:destroy, :update]
    before_action :load_commentable, only: [:destroy, :create]
  end

  def update

  end

  def create
    @comment = @commentable.comments.new(comment_params)
    @comment.user = current_user
    @comment.save
    if @comment.save
      PrivatePub.publish_to "/#{@commentable.class.name}/#{@commentable.id}/comments", comment: @comment.to_json
      render nothing: true
    else
      render json: @commentable.errors.full_messages, status: :unprocessable_entity
    end
  end

  def destroy
    @comment.destroy if @commentable.user_id == current_user.id
  end

  private

  def load_comment
    @comment = Comment.find(params[:id])
  end

  def load_commentable
    @commentable = controller_name.classify.constantize.find(params[:id])
  end

  def comment_params
    params.require(:comment).permit(:body)
  end

end
